import java.io.*;
import java.util.*;

public class Main {

	void useCar (Car car)
	{
		car.driving();
		System.out.println(car.getNumOfSeets());
	}
	
	public static void main(String[] args) throws Exception
	{
		Main main = new Main();
		Car car = new BMW();
		main.useCar(car);
		
		Person user = new Person();
		System.out.println(user.getName());
		
		//работа с файлами
		File file = new File ("temp.txt");
		if (!file.exists()) 
		{
			System.out.println(file.getName() + " physically doesn't exists");
			file.createNewFile();
		}
		if (file.isFile()) 
		{
			System.out.println(file.getName() + " is file");
		}
		
		FileWriter fileWriter = new FileWriter (file);
		fileWriter.write("source code was implemented by dasha");
		
		//fileWriter.flush();
		//fileWriter.close();
		
		FileReader fileReader = new FileReader (file);
		char[] charsFile = new char[255];
		fileReader.read(charsFile);
		System.out.println (charsFile);
		
		BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
		bufferedWriter.write("source code was implemented by dasha");
		bufferedWriter.newLine();
		bufferedWriter.write("go asleep");
		
		bufferedWriter.flush();
		bufferedWriter.close();
		
		BufferedReader bufferedReader = new BufferedReader (fileReader);
		while (bufferedReader.ready()) //дошли ли мы до конца файла и можно ли читать далее
		{
			System.out.println(bufferedReader.readLine());
		}
		
		User userToSerialize = new User();
		userToSerialize.lifeLevel = 55;
		Sord sord = new Sord();
		sord.level = 5;
		userToSerialize.sord = sord;
		
		System.out.println("Serialize user life level " + userToSerialize.lifeLevel);
		System.out.println("Serialize user sord level " + userToSerialize.sord.level);
		
		FileOutputStream fileOutputStream = new FileOutputStream("userFile");
		ObjectOutputStream objectOutputStream = new ObjectOutputStream (fileOutputStream);
		objectOutputStream.writeObject(userToSerialize);
		objectOutputStream.close();
		
		FileInputStream fileInputStream = new FileInputStream ("userFile");
		ObjectInputStream objectInputStream = new ObjectInputStream(fileInputStream);
		
		User userDeserialize = (User)objectInputStream.readObject();
		objectInputStream.close();
		
		System.out.println("Deserialize user life level " + userDeserialize.lifeLevel);
		System.out.println("Deserialize user sord level " + userDeserialize.sord);
		
		int[] array = new int[10]; //сразу выделяем память при создании - она фиксируется
		
		Collection collection = new ArrayList();
		//Collections collections;
		//Arrays arrays;
		
		collection.add("1");
		collection.add("2");
		collection.add("3");
		
		collection.remove("2");
		
		//Iterator iterator = collection.iterator();
		//while (iterator.hasNext()) System.out.println(iterator.next());
		
		//for тоже работает на основе итераторов
		for (Object o: collection) System.out.println(o);
		
		List myList = new ArrayList(); 
		
		myList.add("55"); 
		myList.add("66");
		myList.add("77");
		
		System.out.println("First element of ArrayList: " + myList.get(0));
		
		Set mySet = new HashSet();
		Queue myQueue = new PriorityQueue();
		Map myMap = new HashMap();
		
		
	}

}
